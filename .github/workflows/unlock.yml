name: Unlock

on:
  workflow_dispatch:

permissions:
  contents: read

env:
  TF_BUCKET: tf_state_1
  TF_PREFIX: state
  BUCKET_NAME: web_app_marco_ex

jobs:
  infra-and-site:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Authenticate for Terraform + gcloud
      - name: Auth to Google Cloud (Terraform)
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_TF_KEY }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      # Terraform init & apply
      - name: Terraform Init
        working-directory: infra
        run: |
          terraform init \
            -backend-config="bucket=${TF_BUCKET}" \
            -backend-config="prefix=${TF_PREFIX}"

      - name: Terraform Unlock (auto-detect ID)
        working-directory: infra
        shell: bash
        run: |
          set -euo pipefail

          # Run a dummy plan to force Terraform to show lock info if locked
          set +e
          OUT=$(terraform plan -lock-timeout=10s -input=false -no-color 2>&1)
          RC=$?
          set -e

          echo "$OUT"

          if [[ $RC -ne 0 ]] && grep -q "Error acquiring the state lock" <<<"$OUT"; then
            LOCK_ID=$(awk '/Lock Info:/{f=1} f && $1=="ID:"{print $2; exit}' <<<"$OUT" | tr -d '[:space:]')
            if [[ -n "${LOCK_ID:-}" ]]; then
              echo "🔓 Unlocking with ID: $LOCK_ID"
              terraform force-unlock -force "$LOCK_ID"
              echo "✅ Unlocked."
            else
              echo "❌ Could not parse lock ID from Terraform output."
              exit 1
            fi
          else
            echo "✅ No lock detected."
          fi

